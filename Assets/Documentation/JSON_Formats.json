{
	"_comment": "Move Format; any element may have the string value 'internal' to default to custom internal code for more complex moves.",
	"timestamp": 567845678,
		"_timestamp_comment": "Automatically generated by generator and only set once when move is first created; determines ID by sort order.",
	"name": "Super Hydro Move Of Death",
	"type": ["List of types"],
		"_type_comment": "Usually only will have one type, but it can have more if you want.",
	"power": 100,
		"_power_comment": "Set this to -1 for moves that do no damage based on power (or any at all).",
	"accuracy": 100,
		"_accuracy_comment": "Set to -1 if it bypasses accuracy checks.",
	"immuneToSTAB": false,
		"_immuneToSTAB_comment": "This can be omitted and is false by default; if set to true, this move will not receive a same-type attack bonus.",
	"basePP": 10,
	"maxPP": 23,
	"targets": [
		{
			"type": "target || adjacent || all || random || self",
			"team": "enemy || ally"
		}
	],
		"_targets_comment": "May have multiple targets. If no valid targets exist in a battle, the move will always fail. If type=self, team is ignored.",
	"preProcess": [
		{
			"if": [
				{
					"key": "species || enemySpecies || hasStatus || enemyHasStatus || usedMove || hasMove || holdingItem || form || weather || battleEnvironment || location",
					"value": "The value to look for goes here. Battle environment is like the typed terrain; location is 'cave', 'outside', 'building', 'water', 'underwater', 'shore', etc."
				}
			],
			"then": {
				"change": "types || power || accuracy || immuneToSTAB",
				"to": "New value goes here. May be a string starting with * to multiply by current value. Must be an array if changing types, boolean if changing STAB immunity."
			}
		},
		{
			"then": {
				"change": "flag",
				"targets": [],
				"name": "flagNameHere",
				"to": "New value goes here. May be a string starting with * to multiply by current value or + to add to current value.",
			}
		}
	],
		"_preProcess_comments": "Runs before the attack executes to change move properties based on battle conditions. Can have multiple effects with multiple conditions each. Unconditional effects have a 'then' property with no 'if' property.",
	"effects": [
		{
			"chance": 0.5,
			"category": "stat",
			"type": "statDefense || statAttack || statSpeed || statSpecialD || statSpecialA || statAccuracy || statEvasion",
			"modifier": "-3",
				"_modifier_comment": "May be positive or negative, any value. If min or max stat is reached, no effect will happen, but the move may still succeed."
		},
		{
			"chance": 1.0,
			"category": "effect",
			"type": "freeze || burn || poison || badPoison || confuse || paralyze || sleep || flinch"
		},
		{
			"chance": 0.25,
			"category": "heal",
			"targets": [
				"_targets_comment": "Same potential targets at the move targets."
			],
			"base": 5,
				"_base_comment": "Maye be positive, negative, integer, or decimal.",
			"type": "damage || health || maxHP || value",
				"_type_comment": "If damage, health, or maxHP, the base is multiplied by that value and added; if type=value, the number is added absolutely."
		},
		{
			"chance": 0.75,
			"category": "protect",
			"type": [
				"List of types, or the keywords 'all', 'special', 'physical', 'damage', or 'status'."
			]
		},
		{
			"chance": 0.45,
			"category": "addedDamage",
			"base": 4,
			"targets": [],
			"type": "damage || health || maxHP || value || attackStat || spAttackStat || targetWeight || selfWeight"
		},
		{
			"chance": 0.10,
			"category": "changeEnvironment",
			"type": "weather || terrain",
			"base": "New weather or terrain value goes here."
		}
	]
	
}