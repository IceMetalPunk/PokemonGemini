<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Callable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentRegion = undefined;
regionName = "";
wildBattles = undefined;

animationStage = -1;
animationOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = mouse_x, yy = mouse_y;

var tile = tile_layer_find(1000000, xx, yy);
if (tile != -1) {
    var regionID = tile_get_left(tile);
    regionID = (regionID div 16);
    
    var region = global.regionMap[? regionID];
    
    if (!is_undefined(region) &amp;&amp; region != currentRegion) {
        regionName = region[? "name"];
        wildBattles = region[? "wildBattles"];
        currentRegion = region;
        animationStage = 0;
        animationOffset = 0;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tile_layer_hide(1000000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Drop-down stage of region name animation
if (animationStage == 0) {
    animationOffset += 2;

    draw_set_font(global.OPTION_FONT);    
    draw_set_color(c_white);
    draw_rectangle(0, -20 + animationOffset - 2, 10 + string_width(regionName), -20 + animationOffset + string_height(regionName) + 2, 0);
    draw_set_color(c_black);
    draw_text(5, -20 + animationOffset, regionName);
    if (animationOffset &gt;= 22) {
        animationOffset = 0;
        animationStage = 1;
    }
    draw_set_font(-1);
}
// Delay stage of region name animation
else if (animationStage == 1) {
    ++animationOffset;
    
    draw_set_font(global.OPTION_FONT);
    draw_set_color(c_white);
    draw_rectangle(0, 0, 10 + string_width(regionName), 4 + string_height(regionName), 0);
    draw_set_color(c_black);
    draw_text(5, 2, regionName);
    if (animationOffset &gt;= 45) {
        animationOffset = 0;
        animationStage = 2;
    }
    draw_set_font(-1);
}
// Fade-out stage of region name animation
else if (animationStage == 2) {
    animationOffset += 0.05;
    
    draw_set_font(global.OPTION_FONT);
    var oalpha = draw_get_alpha();
    draw_set_alpha(1 - animationOffset);
    
    draw_set_color(c_white);
    draw_rectangle(0, 0, 10 + string_width(regionName), 4 + string_height(regionName), 0);
    draw_set_color(c_black);
    
    draw_text(5, 2, regionName);
    draw_set_alpha(oalpha);
    
    if (animationOffset &gt;= 1) {
        animationStage = -1;
        animationOffset = 0;
    }
    draw_set_font(-1);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
