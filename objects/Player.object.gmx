<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SprPlayerUp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Callable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goToX = x;
goToY = y;
spd = 2;
runningModifier = 1;
isSurfing = false;

image_speed = 0;
image_index = 0;

drawEncounter = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement
var moved = false;
if (x == goToX &amp;&amp; y == goToY) {

    if (keyboard_check(vk_shift)) {
        runningModifier = 2;
    }
    else {
        runningModifier = 1;
    }

    // Sprite setting
    if (keyboard_check(vk_left)) {
        sprite_index = SprPlayerLeft;
    }
    else if (keyboard_check(vk_right)) {
        sprite_index = SprPlayerRight;
    }
    else if (keyboard_check(vk_up)) {
        sprite_index = SprPlayerUp;
    }
    else if (keyboard_check(vk_down)) {
        sprite_index = SprPlayerDown;
    }
    
    // Actual movement goal setting
    if (keyboard_check(vk_left) &amp;&amp; !side_solid(goToX - 16, goToY, MASK_RIGHT)) {
        goToX -= 16;
    }
    else if (keyboard_check(vk_right) &amp;&amp; !side_solid(goToX + 16, goToY, MASK_LEFT)) {
        goToX += 16;
    }
    else if (keyboard_check(vk_up) &amp;&amp; !side_solid(goToX, goToY - 16, MASK_BOTTOM)) {
        goToY -= 16;
    }
    else if (keyboard_check(vk_down) &amp;&amp; !side_solid(goToX, goToY + 16, MASK_TOP)) {
        goToY += 16;
    }    
    else {
        image_index = 0;
        image_speed = 0;
    }
    
    var destTerrain = call_method(TerrainManager, "getTerrain", goToX, goToY);
    if ((destTerrain == "water" || destTerrain == "shore") &amp;&amp; !isSurfing) {
        goToX = x;
        goToY = y;
        image_index = 0;
        image_speed = 0;
    }
    else if (destTerrain != "water" &amp;&amp; destTerrain != "shore" &amp;&amp; isSurfing) {
        goToX = x;
        goToY = y;
        image_index = 0;
        image_speed = 0;
    }
    
}

else if (x != goToX) {
    moveed = true;
    var dir = sign(goToX - x);
    
    x += runningModifier * spd * dir;
    image_speed = 0.2;
}
else if (y != goToY) {
    moved = true;
    var dir = sign(goToY - y);
    
    y += runningModifier * spd * dir;
    image_speed = 0.2;
}

// Trigger encounters
if (moved &amp;&amp; x == goToX &amp;&amp; y == goToY) {
    var encounter = call_method(TerrainManager, "getEncounter", goToX, goToY);
    if (!is_undefined(encounter)) {
        if (irandom(19) == 1) {
            drawEncounter = encounter[? "species"];
        }
        else {
            drawEncounter = "No Such Luck";
        }
    }
    else {
        drawEncounter = "No Such Encounter";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(10, 50, drawEncounter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
